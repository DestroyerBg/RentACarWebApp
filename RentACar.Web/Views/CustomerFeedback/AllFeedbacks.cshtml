
@using RentACar.Data.Models
@using RentACar.Web.ViewModels.CustomerFeedback
@model IEnumerable<UserFeedbackViewModel>
<div class="container my-5">
    <h2 class="text-center mb-4">Мнения на потребителите</h2>
    @if (!Model.Any())
    {
        <p class="text-center text-muted">Няма публикувани мнения.</p>
    }
    else
    {
        <div class="list-group">
            @foreach (var feedback in Model)
            {
                <div class="list-group-item bg-dark text-light mb-3 rounded">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="mb-1">@feedback.CarBrandAndModel</h5>
                        <small class="text-muted">@feedback.CreatedOn.ToString(DateFormat)</small>
                    </div>
                    <p class="mb-2">@feedback.Description</p>
                    <div class="d-flex justify-content-between align-items-center">
                        <span>
                            <strong>Оценка:</strong>
                            <span class="text-warning">
                                @for (int i = 1; i <= 5; i++)
                                {
                                    if (i <= feedback.Stars)
                                    {
                                        <i class="fas fa-star"></i>
                                    }
                                    else
                                    {
                                        <i class="far fa-star"></i>
                                    }
                                }
                            </span>
                        </span>
                        @{

                            if ((bool?)TempData[ShowDeleteOptionString] == true)
                            {
                                <button class="btn btn-danger btn-sm delete-feedback-btn"
                                        data-feedback-id="@feedback.Id">
                                    Изтрий
                                </button>
                            }

                        }
                    </div>
                </div>
            }
        </div>
    }
</div>

@if ((bool?)TempData[ShowDeleteOptionString] == true)
{
    <script>
       document.addEventListener('DOMContentLoaded', function () {
        const deleteButtons = document.querySelectorAll('.delete-feedback-btn');

        deleteButtons.forEach(button => {
            button.addEventListener('click', function () {
                const feedbackId = this.getAttribute('data-feedback-id');

                Swal.fire({
                    title: 'Сигурни ли сте, че искате да изтриете това мнение?',
                    text: 'Това действие не може да бъде отменено!',
                    icon: 'warning',
                    background: '#343a40',
                    color: '#f8f9fa',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'Да, изтрий!',
                    cancelButtonText: 'Отказ'
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch(`/CustomerFeedback/DeleteFeedback/?id=${feedbackId}`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        }).then(response => response.json())
                        .then(data => {
                            if (data.success == true) {
                                PrintAlert(data.message);
                                button.closest('.list-group-item').remove();
                            } else {
                                PrintError(data.message);
                            }
                        });
                    }
                });
            });
        });
    });
    </script>
}