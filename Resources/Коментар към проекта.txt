Проектът е конфигуриран така че да не се налага квесторът който го проверява да конфигурира нещо допълнително от себе си. Все пак за да съм сигурен, че всичко е ясно, държа да уточня няколко неща.

1. В процеса на разбработка съм ползвал локален SQL server (без docker и т.н), съответно работи автоматично с него. Connection string-a се намира в appsettings.json и той си е универсален за локален сървър, като се използва connection string без id и парола. Ако при вас се използва докер или локалната инстанция изисква Id и парола трябва да промените стринга в appsettings.json. Важно е да се запази името на connection string което е "Development", понеже с идеята да се стартира автоматично съм имплементирал ConnectionStringProvider който търси в appsettings.json string с това име. С друго име няма да го намери и ще хвърли Exception. Отначало се сийдва датата от JSON файлове, всички от които се намират в RentACar.Data/Seeder/JSON. Това се прави само веднъж когато приложението се стартира за първи път или базата е дропната насилствено.

2. Проекта е съставен от общо 10 библиотеки - две от които трябва да работят паралелно за да върви цялото приложение. Едното е стандартния Web където е MVC структурата, а другото е API, което проекта използва например за Geolocation. В appsettings.json на RentACar.Web.API съм конфигурирал Kestrel който задължава API-то да работи на порт 7027. Това е порта именно който се стартира за първи път API то при мен и всеки път си го избираше него и без да го задължавам. В случая съм конфигурирал това с идеята и при друга машина да може да се стреля към API то и да съм сигурен, че върви на един и същ адрес. Ако при вас липсва такъв порт (7027), трябва да сложите някой друг в appsettings.json на API и в папка wwwroot/JS/config.js на основния проект трябва да се сложи същия порт, който е сложен и в appsettings-a. Това гарантира, че заявките ще отиват на правилното място. Важно е когато стартирате проекта да се уверите, че стартират и двете приложения. Това става с десен бутон върху Solution и там в properties на StartUp Project трябва да е избрано RentACar.Web и RentACar.Web.API трябва да им е зададено на Start without debug или Start - при мен и двете работят еднакво, едното просто ми позволява да дебъгвам по лесно. 

3. След сийдването на данните приложението разполага с 3 акаунта - админ, модератор и стандартен user. Цялата информация за тях е налична с папка resources която се намира заедно с останалите библиотеки, където е и този файл. Логването става с имейл и парола.

Надявам се да съм обяснил всичко ясно ако има нещо пишете на имейл gabriel-kulev@abv.bg.
